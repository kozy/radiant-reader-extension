%p
  = f.label :name, t('your_name'), :class => 'required'
  %span.formnote= t('name_notes')
  = f.text_field :name, :class => 'standard'

- if Radiant::Config['reader.use_honorifics?']
  %p
    = f.label :honorific, t(:honorific), :class => 'optional'
    %span.formnote= t('honorific_notes')
    = f.text_field :honorific, :class => 'standard'

- if @reader.new_record? && @email_field

  %p
    = f.label @email_field, t('your_email'), :class => 'required'
    %span.formnote= t('email_notes')
    = text_field_tag @email_field, params[@email_field] || @reader.email, :id => "reader_#{@email_field}", :class => 'standard'

  .innocuous
    %label{ :for => 'reader_email', :class => 'required' }
      = t("dont_fill")
    %span.formnote= t('spam_trap')
    = text_field_tag 'reader_email', '', :name => 'reader[email]', :class => 'standard'

- else

  %p
    = f.label :email, t('your_email'), :class => 'required'
    %span.formnote= t('email_notes')
    = f.text_field :email, :class => 'standard'

- if Radiant::Config['reader.use_description?']
  %p
    = f.label :description, t('your_description'), :class => 'optional'
    %span.formnote= t('description_notes')
    = f.text_area :description, :class => 'standard', :rows => 8

%p
  = f.label :login, t('login_name'), :class => 'optional'
  %span.formnote= t('login_notes')
  = f.text_field :login, :class => 'standard'

%p
  - label = @reader.new_record? ? t('password') : t('change_password')
  - cssclass = @reader.new_record? ? 'required' : 'optional'
  = f.label :password, label, :class => cssclass
  %span.formnote= @reader.new_record? ? t('password_notes') : t('existing_password_notes')
  = f.password_field :password, :class => 'standard', :autocomplete => 'off'

%p
  - label = @reader.new_record? ? t('confirm_password') : t('confirm_new_password')
  - cssclass = @reader.new_record? ? 'required' : 'optional'
  = f.label :password_confirmation, label, :class => cssclass
  %span.formnote= t('existing_password_notes')
  = f.password_field :password_confirmation, :class => 'standard', :autocomplete => 'off'

- @form_partials.each do |partial|
  = render :partial => partial
