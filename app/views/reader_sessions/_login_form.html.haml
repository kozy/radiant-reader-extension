- @reader_session ||= ReaderSession.new
- no_title ||= false
- purpose ||= false

.login_form
  - cssclass = "compact friendly"
  - cssclass << " inline" if @inline
  - form_for @reader_session, :url => reader_session_path, :html => {:class => cssclass} do |f|
    
    - unless no_title
      %h2
        - if purpose
          = t(purpose) + ','
          = t('please')
        - else
          = t('please')
        = t('log_in')
        - if Radiant::Config['reader.allow_registration?']
          = t('or')
          = link_to t('register'), new_reader_url

    - if @error
      %p.haserror
        = t('login_unknown')
        = link_to t('forgotten_password'), new_password_reset_url

    %p{ :class => @reader_session.errors.on(:login) ? 'haserror' : '' }
      %label{:for => "reader_session_login"}
        = t('username').titlecase
      = f.text_field :login, :class => 'login' 
        
    %p{ :class => @reader_session.errors.on(:password) ? 'haserror' : '' }
      %label{:for => "reader_session_password"}
        = t('password').titlecase
      = f.password_field :password, :class => 'login'

    %p.buttons
      = f.submit ' Log in '
      = f.check_box :remember_me
      %label.paranthetical{:for => "reader_session_remember_me"}
        = t('remember_me')

  %ul.quiet
    - if Radiant::Config['reader.allow_registration?']
      %li
        = link_to t("registration").titlecase, new_reader_url
        = t('is_free_and_quick')
    %li
      = link_to t("forgotten_password").titlecase, new_password_reset_url
      
